{"ast":null,"code":"const BASE_URL = \"http://localhost:5000/api\";\nexport async function getSensor(sensor) {\n  try {\n    const res = await fetch(`${BASE_URL}/${sensor}`);\n    if (!res.ok) throw new Error(\"Failed to fetch data\");\n    const data = await res.json();\n    return data.value;\n  } catch (error) {\n    console.error(`❌ Failed to fetch ${sensor}:`, error.message);\n    return null;\n  }\n}\nexport async function updateSensor(sensor, value) {\n  try {\n    await fetch(`${BASE_URL}/${sensor}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        value\n      })\n    });\n  } catch (error) {\n    console.error(`❌ Failed to update ${sensor}:`, error.message);\n  }\n}","map":{"version":3,"names":["BASE_URL","getSensor","sensor","res","fetch","ok","Error","data","json","value","error","console","message","updateSensor","method","headers","body","JSON","stringify"],"sources":["C:/Users/itayr/Documents/GitHub/project_idf/project_idf/client/src/api/sensors.js"],"sourcesContent":["const BASE_URL = \"http://localhost:5000/api\";\r\n\r\nexport async function getSensor(sensor) {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/${sensor}`);\r\n    if (!res.ok) throw new Error(\"Failed to fetch data\");\r\n    const data = await res.json();\r\n    return data.value;\r\n  } catch (error) {\r\n    console.error(`❌ Failed to fetch ${sensor}:`, error.message);\r\n    return null; \r\n  }\r\n}\r\n\r\nexport async function updateSensor(sensor, value) {\r\n  try {\r\n    await fetch(`${BASE_URL}/${sensor}`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ value }),\r\n    });\r\n  } catch (error) {\r\n    console.error(`❌ Failed to update ${sensor}:`, error.message);\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,eAAeC,SAASA,CAACC,MAAM,EAAE;EACtC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,IAAIE,MAAM,EAAE,CAAC;IAChD,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACpD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI,CAACE,KAAK;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqBR,MAAM,GAAG,EAAEQ,KAAK,CAACE,OAAO,CAAC;IAC5D,OAAO,IAAI;EACb;AACF;AAEA,OAAO,eAAeC,YAAYA,CAACX,MAAM,EAAEO,KAAK,EAAE;EAChD,IAAI;IACF,MAAML,KAAK,CAAC,GAAGJ,QAAQ,IAAIE,MAAM,EAAE,EAAE;MACnCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET;MAAM,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsBR,MAAM,GAAG,EAAEQ,KAAK,CAACE,OAAO,CAAC;EAC/D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}